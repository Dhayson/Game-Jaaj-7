//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Scripts/VillainControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @VillainControl : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @VillainControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""VillainControl"",
    ""maps"": [
        {
            ""name"": ""Skills"",
            ""id"": ""40d6c54d-4d02-4633-b082-4c569cb5103e"",
            ""actions"": [
                {
                    ""name"": ""Q"",
                    ""type"": ""Button"",
                    ""id"": ""5d48de70-005a-4f54-bfc2-7147fe4e39f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""W"",
                    ""type"": ""Button"",
                    ""id"": ""9d19122b-2fc6-439c-b561-e38983feb02e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E"",
                    ""type"": ""Button"",
                    ""id"": ""61fad00c-e726-4e94-aec2-20bcb871ed21"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R"",
                    ""type"": ""Button"",
                    ""id"": ""6808440d-c087-4c31-af9e-98872a324661"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""28dea761-b0f3-4041-896b-042e7c8e2f20"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""S"",
                    ""type"": ""Button"",
                    ""id"": ""d9281c01-79b7-438d-a152-a3c4636e6f3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8a3cc3f5-2ca5-4075-94b5-c9e5793d9770"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""W"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abae0e27-d8fd-4316-84da-484d377e6266"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3b49467-de7b-41a0-a3f2-a93d771fe291"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c55330f-ce92-46e8-8205-083c367c6b4b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ec381a4-7d3a-4a33-81f0-b203beff485b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""S"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96bf7df9-854a-409b-8b25-4c22b9caa2a5"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Q"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Skills
        m_Skills = asset.FindActionMap("Skills", throwIfNotFound: true);
        m_Skills_Q = m_Skills.FindAction("Q", throwIfNotFound: true);
        m_Skills_W = m_Skills.FindAction("W", throwIfNotFound: true);
        m_Skills_E = m_Skills.FindAction("E", throwIfNotFound: true);
        m_Skills_R = m_Skills.FindAction("R", throwIfNotFound: true);
        m_Skills_A = m_Skills.FindAction("A", throwIfNotFound: true);
        m_Skills_S = m_Skills.FindAction("S", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Skills
    private readonly InputActionMap m_Skills;
    private ISkillsActions m_SkillsActionsCallbackInterface;
    private readonly InputAction m_Skills_Q;
    private readonly InputAction m_Skills_W;
    private readonly InputAction m_Skills_E;
    private readonly InputAction m_Skills_R;
    private readonly InputAction m_Skills_A;
    private readonly InputAction m_Skills_S;
    public struct SkillsActions
    {
        private @VillainControl m_Wrapper;
        public SkillsActions(@VillainControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Q => m_Wrapper.m_Skills_Q;
        public InputAction @W => m_Wrapper.m_Skills_W;
        public InputAction @E => m_Wrapper.m_Skills_E;
        public InputAction @R => m_Wrapper.m_Skills_R;
        public InputAction @A => m_Wrapper.m_Skills_A;
        public InputAction @S => m_Wrapper.m_Skills_S;
        public InputActionMap Get() { return m_Wrapper.m_Skills; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SkillsActions set) { return set.Get(); }
        public void SetCallbacks(ISkillsActions instance)
        {
            if (m_Wrapper.m_SkillsActionsCallbackInterface != null)
            {
                @Q.started -= m_Wrapper.m_SkillsActionsCallbackInterface.OnQ;
                @Q.performed -= m_Wrapper.m_SkillsActionsCallbackInterface.OnQ;
                @Q.canceled -= m_Wrapper.m_SkillsActionsCallbackInterface.OnQ;
                @W.started -= m_Wrapper.m_SkillsActionsCallbackInterface.OnW;
                @W.performed -= m_Wrapper.m_SkillsActionsCallbackInterface.OnW;
                @W.canceled -= m_Wrapper.m_SkillsActionsCallbackInterface.OnW;
                @E.started -= m_Wrapper.m_SkillsActionsCallbackInterface.OnE;
                @E.performed -= m_Wrapper.m_SkillsActionsCallbackInterface.OnE;
                @E.canceled -= m_Wrapper.m_SkillsActionsCallbackInterface.OnE;
                @R.started -= m_Wrapper.m_SkillsActionsCallbackInterface.OnR;
                @R.performed -= m_Wrapper.m_SkillsActionsCallbackInterface.OnR;
                @R.canceled -= m_Wrapper.m_SkillsActionsCallbackInterface.OnR;
                @A.started -= m_Wrapper.m_SkillsActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_SkillsActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_SkillsActionsCallbackInterface.OnA;
                @S.started -= m_Wrapper.m_SkillsActionsCallbackInterface.OnS;
                @S.performed -= m_Wrapper.m_SkillsActionsCallbackInterface.OnS;
                @S.canceled -= m_Wrapper.m_SkillsActionsCallbackInterface.OnS;
            }
            m_Wrapper.m_SkillsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Q.started += instance.OnQ;
                @Q.performed += instance.OnQ;
                @Q.canceled += instance.OnQ;
                @W.started += instance.OnW;
                @W.performed += instance.OnW;
                @W.canceled += instance.OnW;
                @E.started += instance.OnE;
                @E.performed += instance.OnE;
                @E.canceled += instance.OnE;
                @R.started += instance.OnR;
                @R.performed += instance.OnR;
                @R.canceled += instance.OnR;
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @S.started += instance.OnS;
                @S.performed += instance.OnS;
                @S.canceled += instance.OnS;
            }
        }
    }
    public SkillsActions @Skills => new SkillsActions(this);
    public interface ISkillsActions
    {
        void OnQ(InputAction.CallbackContext context);
        void OnW(InputAction.CallbackContext context);
        void OnE(InputAction.CallbackContext context);
        void OnR(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnS(InputAction.CallbackContext context);
    }
}
